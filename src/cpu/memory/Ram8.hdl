// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
        // DMux8Way is in charge of setting the "load" wire to the proper register.
        // For example, if `address=010`. then `l1=0`, `l1=1`, `l2=0`, `l3=0`, and so on.
        // Each output wire from this DMux8Way chip is plugged into the "load" wire from one of the registers.
        // Given we have used the register's address before, then we are certain to have selected the proper register.
        DMux8Way(in=load, sel=address, a=l1, b=l2, c=l3, d=l4, e=l5, f=l6, g=l7, h=l8);
        Register(in=in, load=l1, out=r1);
        Register(in=in, load=l2, out=r2);
        Register(in=in, load=l3, out=r3);
        Register(in=in, load=l4, out=r4);
        Register(in=in, load=l5, out=r5);
        Register(in=in, load=l6, out=r6);
        Register(in=in, load=l7, out=r7);
        Register(in=in, load=l8, out=r8);
        // Now it is only a matter of selecting one of the eight registers using its address.
        // The Mux8Way16 chip is exactly what we need.
        Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address, out=out);
}
